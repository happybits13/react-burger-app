{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chong.sean\\\\devel\\\\react\\\\react-burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../components/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrices: 0,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientsHandler = type => {\n      // Handling count\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; // Handling price\n\n      const oldPrice = this.state.totalPrices;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const updatedPrice = oldPrice + priceAddition; // Set state. This only happens at render stage of lifecycle\n\n      this.setState({\n        totalPrices: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientsHandler = type => {\n      // Handling count\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; // Handling price\n\n      const oldPrice = this.state.totalPrices;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const updatedPrice = oldPrice - priceAddition; // Set state. This only happens at render stage of lifecycle\n\n      this.setState({\n        totalPrices: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    // const ingredients = {\n    //     ...this.state.ingredients\n    // };\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    // To check if ingredient added <=0. if <=0, should disable LESS button\n    const disabledIngredients = { ...this.state.ingredients\n    };\n\n    for (let key in disabledIngredients) {\n      disabledIngredients[key] = disabledIngredients[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      add: this.addIngredientsHandler,\n      remove: this.removeIngredientsHandler,\n      disable: disabledIngredients,\n      price: this.state.totalPrices,\n      purchasable: this.state.purchasable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"/\"));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/chong.sean/devel/react/react-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","OrderSummary","INGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrices","purchasable","purchasing","addIngredientsHandler","type","oldCount","updatedCount","updatedIngredients","oldPrice","priceAddition","updatedPrice","setState","updatePurchaseState","removeIngredientsHandler","sum","Object","keys","map","igKey","reduce","el","render","disabledIngredients","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls'\r\nimport Modal from '../../components/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.4,\r\n    meat: 1.3\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrices: 0,\r\n        purchasable: false,\r\n        purchasing: false,\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        // const ingredients = {\r\n        //     ...this.state.ingredients\r\n        // };\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            },0);\r\n\r\n        this.setState({purchasable: sum > 0})\r\n    }\r\n\r\n    addIngredientsHandler = (type) => {\r\n            // Handling count\r\n            const oldCount = this.state.ingredients[type];\r\n            const updatedCount = oldCount + 1;\r\n            const updatedIngredients = {\r\n                ...this.state.ingredients\r\n            };\r\n            updatedIngredients[type] = updatedCount;\r\n\r\n            // Handling price\r\n            const oldPrice = this.state.totalPrices;\r\n            const priceAddition = INGREDIENTS_PRICES[type];\r\n            const updatedPrice = oldPrice + priceAddition;\r\n\r\n            // Set state. This only happens at render stage of lifecycle\r\n            this.setState({totalPrices: updatedPrice, ingredients: updatedIngredients});\r\n            this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientsHandler = (type) => {\r\n        // Handling count\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        // Handling price\r\n        const oldPrice = this.state.totalPrices;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const updatedPrice = oldPrice - priceAddition;\r\n\r\n        // Set state. This only happens at render stage of lifecycle\r\n        this.setState({totalPrices: updatedPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    render(){\r\n\r\n        // To check if ingredient added <=0. if <=0, should disable LESS button\r\n        const disabledIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for(let key in disabledIngredients){\r\n            disabledIngredients[key] = (disabledIngredients[key] <= 0);\r\n        }\r\n\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Modal>\r\n                    <OrderSummary ingredients={this.state.ingredients}></OrderSummary>\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}></Burger>\r\n                <BuildControls\r\n                    add={this.addIngredientsHandler} \r\n                    remove={this.removeIngredientsHandler}\r\n                    disable={disabledIngredients}\r\n                    price={this.state.totalPrices}\r\n                    purchasable={this.state.purchasable}>\r\n                /</BuildControls>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}