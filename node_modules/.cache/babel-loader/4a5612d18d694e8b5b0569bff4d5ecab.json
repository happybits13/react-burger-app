{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chong.sean\\\\devel\\\\react\\\\react-burger-app\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nconst INGREDIENTS_PRICES = {\n  salad: 0.5,\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrices: 0,\n      purchaseState: false\n    };\n\n    this.addIngredientsHandler = type => {\n      // Handling count\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; // Handling price\n\n      const oldPrice = this.state.totalPrices;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const updatedPrice = oldPrice + priceAddition; // Set state\n\n      this.setState({\n        totalPrices: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState();\n    };\n\n    this.removeIngredientsHandler = type => {\n      // Handling count\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; // Handling price\n\n      const oldPrice = this.state.totalPrices;\n      const priceAddition = INGREDIENTS_PRICES[type];\n      const updatedPrice = oldPrice - priceAddition; // Set state\n\n      this.setState({\n        totalPrices: updatedPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = { ...this.state.ingredients\n    };\n    const sum = Object.key(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchaseState: sum > 0\n    });\n  }\n\n  render() {\n    // To check if ingredient added <=0. if <=0, should disable LESS button\n    const disabledIngredients = { ...this.state.ingredients\n    };\n\n    for (let key in disabledIngredients) {\n      disabledIngredients[key] = disabledIngredients[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      add: this.addIngredientsHandler,\n      remove: this.removeIngredientsHandler,\n      disable: disabledIngredients,\n      price: this.state.totalPrices,\n      purchaseable: this.state.purchaseState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:/Users/chong.sean/devel/react/react-burger-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","INGREDIENTS_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrices","purchaseState","addIngredientsHandler","type","oldCount","updatedCount","updatedIngredients","oldPrice","priceAddition","updatedPrice","setState","updatePurchaseState","removeIngredientsHandler","sum","Object","key","map","igKey","reduce","el","render","disabledIngredients"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls'\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    bacon: 0.7,\r\n    cheese: 0.4,\r\n    meat: 1.3\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrices: 0,\r\n        purchaseState: false\r\n    }\r\n\r\n    updatePurchaseState () {\r\n        const ingredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        const sum = Object.key(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            },0);\r\n\r\n        this.setState({purchaseState: sum > 0})\r\n    }\r\n\r\n    addIngredientsHandler = (type) => {\r\n            // Handling count\r\n            const oldCount = this.state.ingredients[type];\r\n            const updatedCount = oldCount + 1;\r\n            const updatedIngredients = {\r\n                ...this.state.ingredients\r\n            };\r\n            updatedIngredients[type] = updatedCount;\r\n\r\n            // Handling price\r\n            const oldPrice = this.state.totalPrices;\r\n            const priceAddition = INGREDIENTS_PRICES[type];\r\n            const updatedPrice = oldPrice + priceAddition;\r\n\r\n            // Set state\r\n            this.setState({totalPrices: updatedPrice, ingredients: updatedIngredients})\r\n            this.updatePurchaseState();\r\n    }\r\n\r\n    removeIngredientsHandler = (type) => {\r\n        // Handling count\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        // Handling price\r\n        const oldPrice = this.state.totalPrices;\r\n        const priceAddition = INGREDIENTS_PRICES[type];\r\n        const updatedPrice = oldPrice - priceAddition;\r\n\r\n        // Set state\r\n        this.setState({totalPrices: updatedPrice, ingredients: updatedIngredients})\r\n    }\r\n\r\n    render(){\r\n\r\n        // To check if ingredient added <=0. if <=0, should disable LESS button\r\n        const disabledIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for(let key in disabledIngredients){\r\n            disabledIngredients[key] = (disabledIngredients[key] <= 0);\r\n        }\r\n\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Burger ingredients={this.state.ingredients}></Burger>\r\n                <BuildControls \r\n                    add={this.addIngredientsHandler} \r\n                    remove={this.removeIngredientsHandler}\r\n                    disable={disabledIngredients}\r\n                    price={this.state.totalPrices}\r\n                    purchaseable={this.state.purchaseState}>\r\n                </BuildControls>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BurgerBuilder"]},"metadata":{},"sourceType":"module"}